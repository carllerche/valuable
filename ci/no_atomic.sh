#!/bin/bash

# Update the list of targets that do not support atomic/CAS operations.
#
# Usage:
#    ./ci/no_atomic.sh

set -euo pipefail
IFS=$'\n\t'

cd "$(cd "$(dirname "$0")" && pwd)"/..

file="valuable/no_atomic.rs"

{
    echo "// This file is @generated by $(basename "$0")."
    echo "// It is not intended for manual editing."
    echo ""
} >"$file"

echo "const NO_ATOMIC_CAS: &[&str] = &[" >>"$file"
for target in $(rustc --print target-list); do
    res=$(rustc --print target-spec-json -Z unstable-options --target "$target" \
        | jq -r "select(.\"atomic-cas\" == false)")
    [[ -z "$res" ]] || echo "    \"$target\"," >>"$file"
done
echo "];" >>"$file"

echo "const NO_ATOMIC_64: &[&str] = &[" >>"$file"
for target in $(rustc --print target-list); do
    res=$(rustc --print target-spec-json -Z unstable-options --target "$target" \
        | jq -r "select(.\"max-atomic-width\" == 32)")
    [[ -z "$res" ]] || echo "    \"$target\"," >>"$file"
done
# It is not clear exactly what `"max-atomic-width" == null` means, but they
# actually seem to have the same max-atomic-width as the target-pointer-width.
# The targets currently included in this group are "mipsel-sony-psp",
# "thumbv4t-none-eabi", "thumbv6m-none-eabi", all of which are
# `"target-pointer-width" == "32"`, so assuming them `"max-atomic-width" == 32`
# for now.
for target in $(rustc --print target-list); do
    res=$(rustc --print target-spec-json -Z unstable-options --target "$target" \
        | jq -r "select(.\"max-atomic-width\" == null)")
    [[ -z "$res" ]] || echo "    \"$target\"," >>"$file"
done
echo "];" >>"$file"

# There is no `"max-atomic-width" == 16` or `"max-atomic-width" == 8` targets.

# `"max-atomic-width" == 0` means that atomic is not supported at all.
echo "const NO_ATOMIC: &[&str] = &[" >>"$file"
for target in $(rustc --print target-list); do
    res=$(rustc --print target-spec-json -Z unstable-options --target "$target" \
        | jq -r "select(.\"max-atomic-width\" == 0)")
    [[ -z "$res" ]] || echo "    \"$target\"," >>"$file"
done
echo "];" >>"$file"
